services:
  db:
    image: postgres:15-alpine
    container_name: kindworks_db
    restart: always
    environment:
      POSTGRES_DB: kindworks_auth
      POSTGRES_USER: kindworks-user
      POSTGRES_PASSWORD: SuperSecurePassword123
    ports:
      - "5532:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kindworks-user -d kindworks_auth"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kindworks_network

  db-migrations:
    build:
      context: ./backend/Backend
      dockerfile: AuthServer/AuthServer/Dockerfile.migrations
    container_name: kindworks_db_migrations
    entrypoint: ["/app/efbundle"]
    command: ["--connection", "Host=db;Port=5432;Database=kindworks_auth;Username=kindworks-user;Password=SuperSecurePassword123"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kindworks_network
    restart: on-failure

  auth-server:
    build:
      context: ./backend/Backend/AuthServer/AuthServer
      dockerfile: Dockerfile
    container_name: kindworks_auth_server
    ports:
      - "8080:8080"  # HTTP
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=kindworks_auth;Username=kindworks-user;Password=SuperSecurePassword123
    depends_on:
      db-migrations:
        condition: service_completed_successfully
    networks:
      - kindworks_network
    restart: unless-stopped

volumes:
  auth_db_data:
    driver: local

networks:
  kindworks_network:
    driver: bridge
